# Plots
- name: Check x is replaced by \x in \plot
  cmd: plot('x')
  out: \plotfunction[darkblue]{-9:9}{(\x)}
- name: Check ** is replaced by ^ in \plot
  cmd: plot('x**2')
  out: \plotfunction[darkblue]{-9:9}{(\x)^2}
- name: Changing plot color
  cmd: plot('x', 'darkred')
  out: \plotfunction[darkred]{-9:9}{(\x)}
- name: Changing plot domain
  cmd: plot('x', 'darkred', '3:4')
  out: \plotfunction[darkred]{3:4}{(\x)}
- name: Force use of radians for plots
  cmd: plot('sin(x)')
  out: \plotfunction[darkblue]{-9:9}{sin(((\x))r)}
- name: Radians in nested trig functions for plots
  cmd: plot('sin(cos(x))')
  out: \plotfunction[darkblue]{-9:9}{sin((cos(((\x))r))r)}
  cmd: answer(gradient(0, 0, 1, 2))
  out: ['', '2']
- name: Find the line equation with gradient and point
  cmd: answer(line_equation(3, 1, 2))
  out: ['', 'y = 3 x - 1']
- name: Find the line equation with two points
  cmd: answer(line_equation(0, 1, 1, 3))
  out: ['', 'y = 2 x + 1']
# Differentiation
- name: Treat other variables as constant when differentiating
  cmd: question(diff('x^n'))
  out: '\frac{d}{d x} x^{n}'
- name: Partial differentiation
  cmd: question(diff('x*y', 'x', partial=True))
  out: '\frac{\partial}{\partial x} x y'
# Taylor
- name: Taylor development
  cmd: str(taylor('exp(x)', 0, 3))
  out: 'x**3/6 + x**2/2 + x + 1'
